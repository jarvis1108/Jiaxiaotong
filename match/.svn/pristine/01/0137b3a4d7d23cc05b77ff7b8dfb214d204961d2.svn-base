package com.dxtwangxiao.strongestsuperscholar.module.match.service.impl;

import com.dxtwangxiao.strongestsuperscholar.module.match.entity.LPConsumeRecord;
import com.dxtwangxiao.strongestsuperscholar.module.match.entity.MatchRecordUser;
import com.dxtwangxiao.strongestsuperscholar.module.match.service.MatchRecordUserService;
import com.dxtwangxiao.strongestsuperscholar.web.vo.ErrorInfo;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.sql.Timestamp;
import java.util.List;

import static org.junit.Assert.*;

@RunWith(SpringRunner.class)
@SpringBootTest


public class MatchRecordUserServiceImplTest {
    @Autowired
    private MatchRecordUserService matchRecordUserService;

    @Test
    public void create() throws ErrorInfo {
        MatchRecordUser matchRecordUser = new MatchRecordUser();
        matchRecordUser.setAcquiredGradeCoin(1);
        matchRecordUser.setAcquiredGradePoint(12);
        matchRecordUser.setAcquiredLearningPoint(13);
        matchRecordUser.setCreateTime(Timestamp.valueOf("2018-06-27 12:00:02"));
        matchRecordUser.setCreateUser("test");
        matchRecordUser.setIsCreator(Byte.valueOf("1"));
        matchRecordUser.setIsValid(Byte.valueOf("0"));
        matchRecordUser.setLastUpdTime(Timestamp.valueOf("2018-06-27 12:00:02"));
        matchRecordUser.setLastUpdUser("test");
        matchRecordUser.setMatchRecordId("1111");
        matchRecordUser.setMatchRecordNo("123456");
        matchRecordUser.setMatchRecordUserId("1");
        matchRecordUser.setUserNo("1");
        matchRecordUser.setUserId("1");
        matchRecordUser.setRemark("1");
        matchRecordUser.setOriginalLearningPoint(1);
        matchRecordUser.setOriginalGradePoint(1);
        matchRecordUser.setOriginalGradeCoin(1);
        MatchRecordUser result = matchRecordUserService.create(matchRecordUser);
        assertNotNull(result);
        System.out.println(result);

    }
    @Test
    public void getMatchRecordUserList() {
        List<MatchRecordUser> matchRecordUserList = matchRecordUserService.getMatchRecordUserList(2,1);
        assertNotEquals(1, matchRecordUserList.size());
        matchRecordUserList.forEach(System.out::println);
    }


}