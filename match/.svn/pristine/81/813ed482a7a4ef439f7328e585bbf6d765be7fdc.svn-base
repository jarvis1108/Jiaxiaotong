package com.dxtwangxiao.strongestsuperscholar.module.system.dao;

import com.dxtwangxiao.strongestsuperscholar.module.system.entity.QuestionSetting;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.List;

import static org.junit.Assert.*;

/**
 * 出题设置数据访问层单元测试
 * <p>
 * Created by Devin
 * 2018-07-03 下午 02:53
 */
@RunWith(SpringRunner.class)
@SpringBootTest
public class QuestionSettingRepositoryTest {

    @Autowired
    private QuestionSettingRepository questionSettingRepository;

    @Test
    public void findAll() {
        List<QuestionSetting> questionSettingList = questionSettingRepository.findAll();
        assertNotEquals(0, questionSettingList.size());

        questionSettingList.forEach(System.out::println);
    }

    @Test
    public void findQuestionSettingByQuestionSettingId() {
        String questionSettingId = "1";
        QuestionSetting questionSetting = questionSettingRepository.findQuestionSettingByQuestionSettingId(questionSettingId);

        assertNotNull(questionSetting);
        System.out.println(questionSetting);
    }

    @Test
    public void save() {
        QuestionSetting questionSetting = new QuestionSetting();
        questionSetting.setQuestionSettingId("3");
        questionSetting.setMatchType("双人对战");
        questionSetting.setQuestionNumber(5);
        questionSetting.setQuestionTypeId("1");

        QuestionSetting result = questionSettingRepository.save(questionSetting);
        assertNotNull(result);
        System.out.println(result);
    }

    @Test
    public void findAll1() {
        Pageable pageable = PageRequest.of(1, 1);
        Page<QuestionSetting> questionSettingPage = questionSettingRepository.findAll(pageable);

        List<QuestionSetting> questionSettingList = questionSettingPage.getContent();
        assertNotEquals(0, questionSettingList.size());
        questionSettingList.forEach(System.out::println);

    }
}