global.webpackJsonp([19],{

/***/ 190:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(191);



var app = new __WEBPACK_IMPORTED_MODULE_0_vue___default.a(__WEBPACK_IMPORTED_MODULE_1__index__["a" /* default */]);
app.$mount();
/* harmony default export */ __webpack_exports__["default"] = ({
  config: {
    navigationBarTitleText: '知识练兵场'
  }
});

/***/ }),

/***/ 191:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_mpvue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_mpvue_loader_lib_template_compiler_index_id_data_v_6915e87a_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_mpvue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(194);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(192)
}
var normalizeComponent = __webpack_require__(0)
/* script */

/* template */

/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6915e87a"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_mpvue_loader_lib_selector_type_script_index_0_index_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_mpvue_loader_lib_template_compiler_index_id_data_v_6915e87a_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_mpvue_loader_lib_selector_type_template_index_0_index_vue__["a" /* default */],
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "src\\pages\\exercise\\index.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6915e87a", Component.options)
  } else {
    hotAPI.reload("data-v-6915e87a", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),

/***/ 192:
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ 193:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_wx__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_cut_down__ = __webpack_require__(53);



//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ __webpack_exports__["a"] = ({
  components: {
    cutdown: __WEBPACK_IMPORTED_MODULE_4__components_cut_down__["a" /* default */]
  },
  name: "index.vue",
  data: function data() {
    return {
      indexList: [{ index: 1, isRight: 0, userAnswer: "", choiceList: [] }, //isRight标记该题是否答对，0-未答，-1答错，1-答对
      { index: 2, isRight: 0, userAnswer: "", choiceList: [] }, { index: 3, isRight: 0, userAnswer: "", choiceList: [] }, { index: 4, isRight: 0, userAnswer: "", choiceList: [] }, { index: 5, isRight: 0, userAnswer: "", choiceList: [] }, { index: 6, isRight: 0, userAnswer: "", choiceList: [] }, { index: 7, isRight: 0, userAnswer: "", choiceList: [] }, { index: 8, isRight: 0, userAnswer: "", choiceList: [] }, { index: 9, isRight: 0, userAnswer: "", choiceList: [] }, { index: 10, isRight: 0, userAnswer: "", choiceList: [] }], //题号列表
      choiceList: [],
      questionList: [{
        question: "",
        choiceA: "",
        choiceB: "",
        choiceC: "",
        choiceD: "",
        answer: "",
        reference: "",
        questionAnalyze: "",
        content: ""
      }], //问题列表
      questionIndex: 1, //题号
      questionIndex1: 1,
      userAnswer: "", //用户选择选项
      rightAnswer: "", //正确选项
      contentAni: "", //为题目卡片增加动画
      anserResult: [], //记录答题结果作为参数传递给结果页，回答正确压入1，错误压入-1，同时压入用户答案
      destroyCutdown: false, //是否销毁计时器，传递给子组件
      start: false, //是否开始计时，传递给子组件
      subjectId: "", //学科id
      matchId: "", //战局id
      exerciseInfo: {}, //保存战局id和题目列表
      usedTime: "", //答完10道题共需时间
      isTrue: 0 //1表示答对，0表示答错和未答
    };
  },
  onLoad: function onLoad(option) {
    var _this = this;

    return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.mark(function _callee() {
      var i;
      return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              //初始化数据

              _this.questionIndex = 1;
              _this.userAnswer = "";
              _this.rightAnswer = "";
              _this.contentAni = "";
              _this.subjectId = option.subjectId;
              _this.anserResult = [];
              _this.usedTime = 0;
              _this.start = false;
              if (_this.start === false) {
                __WEBPACK_IMPORTED_MODULE_3__utils_wx__["b" /* default */].showToast({ title: "加载中", icon: "loading", duration: 5000 });
              }
              for (i = 0; i < 10; ++i) {
                _this.indexList[i] = {
                  index: i + 1,
                  isRight: 0,
                  choiceList: [{
                    label: "A",
                    img: "",
                    isRight: 0,
                    style: ""
                  }, {
                    label: "B",
                    img: "",
                    isRight: 0,
                    style: ""
                  }, {
                    label: "C",
                    img: "",
                    isRight: 0,
                    style: ""
                  }, {
                    label: "D",
                    img: "",
                    isRight: 0,
                    style: ""
                  }]
                };
              }
              _context.next = 12;
              return _this.$store.dispatch("getExerciseMatchInfo", {
                userId: _this.$store.state.userId,
                subjectId: _this.subjectId
              });

            case 12:
              _this.exerciseInfo = _context.sent;


              _this.matchId = _this.exerciseInfo.matchId;
              _this.questionList = _this.exerciseInfo.questionList;
              _this.setDefaultChoiceStyle();
              __WEBPACK_IMPORTED_MODULE_3__utils_wx__["b" /* default */].showShareMenu(true);

            case 17:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, _this);
    }))();
  },

  watch: {
    questionList: function questionList() {
      if (this.questionList.length === 10) {
        this.start = true;
        __WEBPACK_IMPORTED_MODULE_3__utils_wx__["b" /* default */].hideToast();
        // wxs.showToast({ title: "加载中", icon: "loading", duration: 1200 });
      }
    }
  },
  methods: {
    //选项的点击事件
    optionClick: function optionClick(selected) {
      this.userAnswer = selected.label;
      this.indexList[this.questionIndex - 1].userAnswer = selected.label;
      this.rightAnswer = this.questionList[this.questionIndex - 1].answer;
      this.setChoiceStyle(selected);
    },


    // 默认的选项样式
    setDefaultChoiceStyle: function setDefaultChoiceStyle() {
      this.indexList[this.questionIndex - 1].choiceList.forEach(function (item) {
        item.img = "/static/images/exercise/Optionbox.png";
      });
    },


    //根据用户选择设置选项样式
    setChoiceStyle: function setChoiceStyle(selected) {
      var _this2 = this;

      //判断用户选择是否正确并显示效果
      if (this.userAnswer === this.rightAnswer) {
        //用户答对
        selected.isRight = 1;
        selected.img = "/static/images/exercise/Checktheoptionbox.png";
        selected.style = "correctChoice";
        //将该题标为答对，并压入结果数组
        this.indexList[this.questionIndex - 1].isRight = 1;
        this.anserResult.push(1);
        this.isTrue = 1;
      } else {
        //用户答错

        if (selected) {
          //selected不为空，说明用户选错
          selected.isRight = -1;
          selected.img = "/static/images/exercise/Erroroption-bg.png";
          selected.style = "errorChoice";
        }
        this.indexList[this.questionIndex - 1].choiceList.forEach(function (item) {
          if (item.label === _this2.rightAnswer) {
            item.isRight = 1;
            item.img = "/static/images/exercise/Checktheoptionbox.png";
          }
        });
        //将该题标为答错，并压入结果数组
        this.indexList[this.questionIndex - 1].isRight = -1;
        this.anserResult.push(-1);
        this.isTrue = 0;
      }
      //进入下一题，设置一个延迟时间来显示选项
      setTimeout(function () {
        if (_this2.questionIndex < _this2.questionList.length) {
          _this2.nextQuestion();
        } else {
          _this2.destroyCutdown = true;
          setTimeout(function () {
            __WEBPACK_IMPORTED_MODULE_3__utils_wx__["b" /* default */].redirectTo("../exercise-result/main?answerResult=" + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(_this2.anserResult) + "&questionList=" + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(_this2.questionList) + "\n            &indexList=" + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(_this2.indexList) + "\n            &usedTime=" + _this2.usedTime + "&subjectId=" + _this2.subjectId + "\n            &matchId=" + _this2.matchId);
          }, 1000); //设置延时使得最后一次时间加上后再跳转到结果页面
        }
      }, 1000);
    },


    //下一题
    nextQuestion: function nextQuestion() {
      var _this3 = this;

      this.questionIndex += 1;
      this.contentAni = "rotate";
      setTimeout(function () {
        _this3.setDefaultChoiceStyle();
      }, 500);
      setTimeout(function () {
        _this3.contentAni = "";
      }, 1000);
    },


    //倒计时时间到
    cutDownOut: function cutDownOut() {
      //触发到时间到，表明用户未完成答题，直接标为答错
      //显示正确答案
      this.userAnswer = "";
      this.indexList[this.questionIndex - 1].userAnswer = "selected.label";
      this.rightAnswer = this.questionList[this.questionIndex - 1].answer;
      this.setChoiceStyle();
    },
    timeKeeping: function timeKeeping(time) {
      var _this4 = this;

      return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.mark(function _callee2() {
        return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this4.usedTime += time;
                if (_this4.destroyCutdown) {
                  //this.destroyCutDown为true，说明到了最后一题
                  _this4.questionIndex1 = _this4.questionIndex;
                } else {
                  _this4.questionIndex1 = _this4.questionIndex - 1;
                }

                _context2.next = 4;
                return _this4.$store.dispatch("SaveLpConsumeRecord", {
                  matchId: _this4.matchId,
                  userId: _this4.$store.state.userId,
                  questionIndex: _this4.questionIndex1,
                  userAnswer: _this4.userAnswer,
                  amount: time,
                  isTrue: _this4.isTrue
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, _this4);
      }))();
    }
  },
  onShareAppMessage: function onShareAppMessage() {
    return {
      title: "只有学霸才能征服的题目，快来看看吧！",
      path: "/page/index/main"
    };
  }
});

/***/ }),

/***/ 194:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "st-content-div"
  }, [_c('img', {
    staticClass: "st-img",
    attrs: {
      "src": "/static/images/bg.png",
      "alt": ""
    }
  }), _vm._v(" "), _c('ul', {
    staticClass: "st-numberConternt-ul"
  }, _vm._l((_vm.indexList), function(item, index) {
    return _c('li', {
      key: item.index,
      staticClass: "st-numberList-li"
    }, [(item.isRight === 1) ? _c('div', {
      staticClass: "st-right-number-div"
    }, [_vm._v("\n            " + _vm._s(item.index) + "    \n            ")]) : (item.isRight === -1) ? _c('div', {
      staticClass: "st-false-number-div"
    }, [_vm._v("\n            " + _vm._s(item.index) + "    \n            ")]) : _c('div', {
      staticClass: "st-number-div"
    }, [_vm._v("\n            " + _vm._s(item.index) + "    \n            ")])])
  })), _vm._v(" "), _c('div', {
    staticClass: "st-questionCard-div",
    class: _vm.contentAni,
    attrs: {
      "id": "content",
      "eventid": '5'
    },
    on: {
      "touchstart": _vm.touchStart,
      "touchmove": _vm.touchMove,
      "touchend": _vm.touchEnd
    }
  }, [_c('img', {
    staticClass: "st-bg",
    attrs: {
      "src": "/static/images/exercise/subject-bg.png",
      "alt": ""
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "st-time-div"
  }, [_c('cutdown', {
    staticClass: "st-bg",
    attrs: {
      "destroy": _vm.destroyCutdown,
      "order": _vm.questionIndex,
      "showOrder": false,
      "start": _vm.start,
      "eventid": '0',
      "mpcomid": '0'
    },
    on: {
      "cutdownout": _vm.cutDownOut,
      "timekeeping": _vm.timeKeeping
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "st-questionTitle-div"
  }, [_c('span', [_vm._v("\n                " + _vm._s(_vm.questionList[_vm.questionIndex - 1].question) + "\n            ")])]), _vm._v(" "), _c('hr', {
    attrs: {
      "id": "hr"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "st-questionOption-div",
    attrs: {
      "id": "choiceList"
    }
  }, [_c('div', {
    key: _vm.choice,
    staticClass: "choice",
    attrs: {
      "id": _vm.choiceA,
      "eventid": '1'
    },
    on: {
      "click": function($event) {
        _vm.optionClick(_vm.indexList[_vm.questionIndex - 1].choiceList[0])
      }
    }
  }, [_c('img', {
    key: _vm.choice,
    staticClass: "choice_img",
    attrs: {
      "src": _vm.indexList[_vm.questionIndex - 1].choiceList[0].img
    }
  }), _vm._v(" "), _c('span', {
    key: _vm.choice,
    staticClass: "choice_content",
    attrs: {
      "id": _vm.indexList[_vm.questionIndex - 1].choiceList[0].style
    }
  }, [_vm._v(_vm._s(_vm.questionList[_vm.questionIndex - 1].choiceA))]), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[0].isRight === -1) ? _c('img', {
    staticClass: "errorIcon",
    attrs: {
      "src": "/static/images/exercise/Errorlabel.png"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[0].isRight === 1) ? _c('img', {
    staticClass: "correctIcon",
    attrs: {
      "src": "/static/images/exercise/Correctlabel.png"
    }
  }) : _vm._e()]), _vm._v(" "), _c('div', {
    key: _vm.choice,
    staticClass: "choice",
    attrs: {
      "id": _vm.choiceA,
      "eventid": '2'
    },
    on: {
      "click": function($event) {
        _vm.optionClick(_vm.indexList[_vm.questionIndex - 1].choiceList[1])
      }
    }
  }, [_c('img', {
    key: _vm.choice,
    staticClass: "choice_img",
    attrs: {
      "src": _vm.indexList[_vm.questionIndex - 1].choiceList[1].img
    }
  }), _vm._v(" "), _c('span', {
    key: _vm.choice,
    staticClass: "choice_content",
    attrs: {
      "id": _vm.indexList[_vm.questionIndex - 1].choiceList[1].style
    }
  }, [_vm._v(_vm._s(_vm.questionList[_vm.questionIndex - 1].choiceB))]), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[1].isRight === -1) ? _c('img', {
    staticClass: "errorIcon",
    attrs: {
      "src": "/static/images/exercise/Errorlabel.png"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[1].isRight === 1) ? _c('img', {
    staticClass: "correctIcon",
    attrs: {
      "src": "/static/images/exercise/Correctlabel.png"
    }
  }) : _vm._e()]), _vm._v(" "), _c('div', {
    key: _vm.choice,
    staticClass: "choice",
    attrs: {
      "id": _vm.choiceA,
      "eventid": '3'
    },
    on: {
      "click": function($event) {
        _vm.optionClick(_vm.indexList[_vm.questionIndex - 1].choiceList[2])
      }
    }
  }, [_c('img', {
    key: _vm.choice,
    staticClass: "choice_img",
    attrs: {
      "src": _vm.indexList[_vm.questionIndex - 1].choiceList[2].img
    }
  }), _vm._v(" "), _c('span', {
    key: _vm.choice,
    staticClass: "choice_content",
    attrs: {
      "id": _vm.indexList[_vm.questionIndex - 1].choiceList[2].style
    }
  }, [_vm._v(_vm._s(_vm.questionList[_vm.questionIndex - 1].choiceC))]), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[2].isRight === -1) ? _c('img', {
    staticClass: "errorIcon",
    attrs: {
      "src": "/static/images/exercise/Errorlabel.png"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[2].isRight === 1) ? _c('img', {
    staticClass: "correctIcon",
    attrs: {
      "src": "/static/images/exercise/Correctlabel.png"
    }
  }) : _vm._e()]), _vm._v(" "), _c('div', {
    key: _vm.choice,
    staticClass: "choice",
    attrs: {
      "id": _vm.choiceA,
      "eventid": '4'
    },
    on: {
      "click": function($event) {
        _vm.optionClick(_vm.indexList[_vm.questionIndex - 1].choiceList[3])
      }
    }
  }, [_c('img', {
    key: _vm.choice,
    staticClass: "choice_img",
    attrs: {
      "src": _vm.indexList[_vm.questionIndex - 1].choiceList[3].img
    }
  }), _vm._v(" "), _c('span', {
    key: _vm.choice,
    staticClass: "choice_content",
    attrs: {
      "id": _vm.indexList[_vm.questionIndex - 1].choiceList[3].style
    }
  }, [_vm._v(_vm._s(_vm.questionList[_vm.questionIndex - 1].choiceD))]), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[3].isRight === -1) ? _c('img', {
    staticClass: "errorIcon",
    attrs: {
      "src": "/static/images/exercise/Errorlabel.png"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.indexList[_vm.questionIndex - 1].choiceList[3].isRight === 1) ? _c('img', {
    staticClass: "correctIcon",
    attrs: {
      "src": "/static/images/exercise/Correctlabel.png"
    }
  }) : _vm._e()])])], 1)], 1)
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-6915e87a", esExports)
  }
}

/***/ })

},[190]);
//# sourceMappingURL=main.js.map