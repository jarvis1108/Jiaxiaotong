package com.dxtwangxiao.strongestsuperscholar.module.match.dao;

import com.dxtwangxiao.strongestsuperscholar.module.match.entity.LPConsumeRecord;
import com.dxtwangxiao.strongestsuperscholar.web.vo.ErrorInfo;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.test.context.junit4.SpringRunner;

import java.awt.print.Pageable;
import java.sql.Timestamp;
import java.util.List;

import static org.junit.Assert.*;

/**
 * 对战记录学点消费记录测试
 * @author meiyu
 */

@SpringBootTest
@RunWith(SpringRunner.class)

public class LPConsumeRecordRepositoryTest {
    @Autowired
    private LPConsumeRecordRepository lpConsumeRecordRepository;

    @Test
    public void save() throws ErrorInfo {
        LPConsumeRecord lpConsumeRecord = new LPConsumeRecord();
        lpConsumeRecord.setAmount(11);
        lpConsumeRecord.setBeginTime(Timestamp.valueOf("2018-06-27 12:03:04"));
        lpConsumeRecord.setCreateTime(Timestamp.valueOf("2018-06-27 12:03:04"));
        lpConsumeRecord.setEndTime(Timestamp.valueOf("2018-06-27 12:03:04"));
        lpConsumeRecord.setIsTrue(Byte.valueOf("1"));
        lpConsumeRecord.setIsValid(Byte.valueOf("1"));
        lpConsumeRecord.setLpConsumeRecordId("2");
        lpConsumeRecord.setMatchRecordId("1");
        lpConsumeRecord.setMatchRecordNo("1");
        lpConsumeRecord.setMatchRecordQuestionId("124");
        lpConsumeRecord.setMatchRecordUserId("1");
        lpConsumeRecord.setQuestionId("1");
        lpConsumeRecord.setUserId("1");
        lpConsumeRecord.setUserNo("1");
        lpConsumeRecord.setRemark("test");
        lpConsumeRecord.setQuestionNo("1");

        LPConsumeRecord result = lpConsumeRecordRepository.save(lpConsumeRecord);
        Assert.assertNotNull(result);
        System.out.println(result);
    }

    @Test
    public void findAll() {
        List<LPConsumeRecord> lpConsumeRecordList = lpConsumeRecordRepository.findAll();
        assertNotEquals(0, lpConsumeRecordList.size());

        lpConsumeRecordList.forEach(System.out::println);

    }
    @Test
    public void findAll1() {
        PageRequest pageable = PageRequest.of(1, 1);
        Page<LPConsumeRecord> lpConsumeRecordPage= lpConsumeRecordRepository.findAll(pageable);
        List<LPConsumeRecord> lpConsumeRecordList = lpConsumeRecordPage.getContent();

        assertNotEquals(1, lpConsumeRecordList.size());
        lpConsumeRecordList.forEach(System.out::println);
    }

}