package com.dxtwangxiao.strongestsuperscholar.module.match.service.impl;

import com.dxtwangxiao.strongestsuperscholar.module.match.dao.MatchRecordRepository;
import com.dxtwangxiao.strongestsuperscholar.module.match.dao.MatchRecordUserRepository;
import com.dxtwangxiao.strongestsuperscholar.module.match.entity.MatchRecord;
import com.dxtwangxiao.strongestsuperscholar.module.match.entity.MatchRecordUser;
import com.dxtwangxiao.strongestsuperscholar.module.match.service.MatchService;
import com.dxtwangxiao.strongestsuperscholar.module.system.entity.*;
import com.dxtwangxiao.strongestsuperscholar.module.system.service.*;
import com.dxtwangxiao.strongestsuperscholar.web.dto.UserDTO;
import com.dxtwangxiao.strongestsuperscholar.web.websocket.common.MatchManagement;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.sql.Timestamp;
import java.util.Date;

/**
 * 战局服务实现
 * <p>
 * Created By Devin
 * 2018-09-04 下午 03:10
 */
@Service
public class MatchServiceImpl implements MatchService {

    @Autowired
    private UserCoinDetailService userCoinDetailService;
    @Autowired
    private UserGPDetailService userGPDetailService;
    @Autowired
    private UserLPDetailService userLPDetailService;

    @Autowired
    private UserService userService;
    @Autowired
    private UserRelInfoService userRelInfoService;

    @Autowired
    private MatchRecordRepository matchRecordRepository;
    @Autowired
    private MatchRecordUserRepository matchRecordUserRepository;

    @Override
    @Transactional
    public UserDTO finish(String matchId, String userId, Integer coin, Integer learningPoint, Integer gradePoint, Integer experience, Integer isWin) {
        // （1）添加用户金币、学点、绩点明细信息
        UserCoinDetail userCoinDetail = userCoinDetailService.save(matchId, userId, coin);
        UserLPDetail userLPDetail = userLPDetailService.save(matchId, userId, learningPoint);
        UserGPDetail userGPDetail = userGPDetailService.save(matchId, userId, gradePoint);

        // （2）更新用户基本信息
        UserRelInfo userRelInfo = userRelInfoService.getByUserId(userId);
        userRelInfo.setCoin(userCoinDetail.getCurrentAmount());
        userRelInfo.setLearningPoint(userLPDetail.getCurrentAmount());
        userRelInfo.setGradePoint(userGPDetail.getCurrentAmount());
        userRelInfo.setMatchSumCount(userRelInfo.getMatchSumCount() + 1);
        if (isWin == 1) {
            userRelInfo.setMatchWinCount(userRelInfo.getMatchWinCount() + 1);
        } else if (isWin == 0) {
            userRelInfo.setMatchLoseCount(userRelInfo.getMatchLoseCount() + 1);
        } else if (isWin == -1) {
            userRelInfo.setMatchDogFallCount(userRelInfo.getMatchDogFallCount() + 1);
        }
        userRelInfoService.updateUser(userRelInfo);
        userRelInfoService.addExperience(userId, experience);

        // （3）更新战局信息
        MatchRecord matchRecord = matchRecordRepository.findByMatchRecordId(matchId);
        matchRecord.setEndTime(new Timestamp(new Date().getTime()));
        Integer matchPeriod = (int) (matchRecord.getEndTime().getTime() - matchRecord.getBeginTime().getTime()) / 1000;
        matchRecord.setMatchPeriod(matchPeriod);
        matchRecordRepository.save(matchRecord);

        // (4) 更新战局用户信息
        MatchRecordUser matchRecordUser = matchRecordUserRepository.findByMatchRecordIdAndUserId(matchId, userId);
        matchRecordUser.setAcquiredLearningPoint(learningPoint);
        matchRecordUser.setAcquiredGradePoint(gradePoint);
        matchRecordUser.setAcquiredGradeCoin(coin);
        matchRecordUser.setLastUpdUser(userId);
        matchRecordUserRepository.save(matchRecordUser);

        // (5) 从战局列表中移除战局信息
        MatchManagement.getInstance().removeMatchByMatchId(matchId);

        // (6) 获取用户信息，返回给客户端
        return userService.getUserDTOById(userId);
    }
}
